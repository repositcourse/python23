# -*- coding: utf-8 -*-
"""
Задание 5.2a

Всё, как в задании 5.2, но, если пользователь ввел адрес хоста, а не адрес сети,
надо преобразовать адрес хоста в адрес сети и вывести адрес сети и маску,
как в задании 5.2.

Пример адреса сети (все биты хостовой части равны нулю):
* 10.0.1.0/24
* 190.1.0.0/16

Пример адреса хоста:
* 10.0.1.1/24 - хост из сети 10.0.1.0/24
* 10.0.5.195/28 - хост из сети 10.0.5.192/28

Если пользователь ввел адрес 10.0.1.1/24, вывод должен быть таким:

Network:
10        0         1         0
00001010  00000000  00000001  00000000

Mask:
/24
255       255       255       0
11111111  11111111  11111111  00000000

Проверить работу скрипта на разных комбинациях хост/маска, например:
    10.0.5.195/28, 10.0.1.1/24

Подсказка:
Есть адрес хоста в двоичном формате и маска сети 28. Адрес сети это первые 28 бит
адреса хоста + 4 ноля.
То есть, например, адрес хоста 10.1.1.195/28 в двоичном формате будет
bin_ip = "00001010000000010000000111000011"

А адрес сети будет первых 28 символов из bin_ip + 0000 (4 потому что всего
в адресе может быть 32 бита, а 32 - 28 = 4)
00001010000000010000000111000000

Ограничение: Все задания надо выполнять используя только пройденные темы.

"""
ip_mask = input("Введите IP сеть и маску: ")
ip, mask = ip_mask.split("/")
bin_mask = "1"*int(mask)+"0"*(32-int(mask))
bin_oct0 = int(bin_mask[:8],2)
bin_oct1 = int(bin_mask[8:16],2)
bin_oct2 = int(bin_mask[16:24],2)
bin_oct3 = int(bin_mask[24:],2)
list_ip = ip.split(".")
m = int(mask)
bin_ip = f'{int(list_ip[0]):08b}{int(list_ip[1]):08b}{int(list_ip[2]):08b}{int(list_ip[3]):08b}'[:m]+"0"*(32-m)
net0,net1,net2,net3 = [
    int(bin_ip[:8],2),
    int(bin_ip[8:16],2),
    int(bin_ip[16:24],2),
    int(bin_ip[24:],2)
]
oct0, oct1, oct2, oct3 = [
    int(bin_oct0),
    int(bin_oct1),
    int(bin_oct2),
    int(bin_oct3)
]
template = """
Network
{0:<8}  {1:<8}  {2:<8}  {3:<8}
{0:08b}  {1:08b}  {2:08b}  {3:08b}

Mask
/{4:}
{5:<10}{6:<10}{7:<10}{8:<10}
{5:<10b}{6:<10b}{7:<10b}{8:<10b}
"""

print(
        template.format(net0, net1, net2, net3,
        mask, oct0, oct1, oct2, oct3)
)
